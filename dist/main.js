(()=>{"use strict";function e(){document.querySelectorAll(".unchecked").forEach((e=>{e.addEventListener("click",(function(){e.classList.contains("checked")?e.classList.remove("checked"):e.classList.add("checked")}))}))}function t(e,t){return{todo:e,time:t}}function n(){document.querySelector(".currentproject").innerHTML=event.target.innerHTML}function o(){document.querySelector(".inputcontainer").classList.remove("active")}function c(e){const t=document.querySelector(".taskdiv"),n=document.createElement("div");n.classList.add("tododiv");const o=document.createElement("div");o.classList.add("leftside");const c=document.createElement("div");c.classList.add("rightside");const d=document.createElement("h3");d.classList.add("todo"),d.innerText=e.todo;const a=document.createElement("div");a.classList.add("unchecked");const s=document.createElement("h4");s.classList.add("tododate"),s.innerText=e.time;const r=document.createElement("button");r.classList.add("removetodobtn"),r.innerHTML="x",o.append(a),o.append(d),c.append(s),n.append(o),n.append(c),n.append(r),console.log(n),console.log(t),t.append(n)}function d(e){document.querySelectorAll(".removeprojectbtn").forEach((t=>{t.addEventListener("click",(function(t){t.target.parentNode.remove();const n=e.indexOf(t.target.parentNode.childNodes[0].childNodes[0].childNodes[1].innerHTML);n>-1&&(e.splice(n,1),localStorage.setItem("projects",JSON.stringify(e)))}))}))}function a(){const e=document.querySelector(".projectbuttoncontainer"),t=document.querySelector(".projectnameinput"),n=document.createElement("div");n.classList.add("projectbtndiv");const o=document.createElement("button"),c=document.createElement("div"),d=document.createElement("h3");d.innerHTML=t.value;const a=document.createElement("img");a.src="images/format-list-checks (1).png",c.append(a),c.append(d);const s=document.createElement("button");s.classList.add("removeprojectbtn"),s.innerHTML="x",o.append(c),o.classList.add("projectbutton"),o.classList.add(`${t.value}`),n.append(o),n.append(s),e.append(n),document.querySelector(".project").classList.remove("active")}function s(e){const t=document.querySelector(".btntaskdiv"),n=document.createElement("div");n.classList.add("btntododiv");const o=document.createElement("div");o.classList.add("btnleftside");const c=document.createElement("div");c.classList.add("btnrightside");const d=document.createElement("h3");d.classList.add("btntodo"),d.innerText=e.todo;const a=document.createElement("div");a.classList.add("btnunchecked");const s=document.createElement("h4");s.classList.add("btntododate"),s.innerText=e.time;const r=document.createElement("button");r.classList.add("removetodobtn"),r.innerHTML="x",o.append(a),o.append(d),c.append(s),n.append(o),n.append(c),n.append(r),t.append(n)}function r(){document.querySelectorAll(".btnunchecked").forEach((e=>{e.addEventListener("click",(function(){e.classList.contains("checked")?e.classList.remove("checked"):e.classList.add("checked")}))}))}function i(e){document.querySelectorAll(".removetodobtn").forEach((t=>{t.addEventListener("click",(function(){event.target.parentNode.remove(),e.forEach((t=>{if(!0===t.includes(event.target.parentNode.childNodes[0].childNodes[1].innerHTML))var n=e.indexOf(t);n>-1&&(e.splice(n,1),localStorage.setItem("todos",JSON.stringify(e)))}))}))}))}function l(e,t){document.querySelectorAll(".removetodobtn").forEach((n=>{n.addEventListener("click",(function(){event.target.parentNode.remove(),e.forEach((n=>{if(!0===n.includes(event.target.parentNode.childNodes[0].childNodes[1].innerHTML)){var o=e.indexOf(n);console.log(o)}o>-1&&(e.splice(o,1),console.log(e),localStorage.setItem(`${t}todos`,JSON.stringify(e)))}))}))}))}const u=document.querySelector("main"),m=document.querySelector(".inbox");window.onload=function(){m.click()};let p=localStorage.getItem("projects")?JSON.parse(localStorage.getItem("projects")):[],v=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];const L=function(){const e=document.createElement("div");e.classList.add("container");const t=document.createElement("h2");t.classList.add("currentproject");const n=document.createElement("div");n.classList.add("taskdiv");const o=document.createElement("div");o.classList.add("buttoncontainer");const c=document.createElement("img");c.src="images/plus.png";const d=document.createElement("button");d.innerHTML="Add Task",d.classList.add("addtask");const a=document.createElement("div");a.classList.add("inputcontainer");const s=document.createElement("input");s.classList.add("chore"),s.type="text",s.placeholder="What to do";const r=document.createElement("input");r.classList.add("date"),r.type="date";const i=document.createElement("div"),l=document.createElement("button");l.classList.add("add"),l.innerHTML="Add";const u=document.createElement("button");return u.innerHTML="Remove",u.classList.add("remove"),i.append(l),i.append(u),a.append(s),a.append(r),a.append(i),o.append(c),o.append(d),e.append(t),e.append(n),e.append(a),e.append(o),e}();function h(){localStorage.setItem("todos",JSON.stringify(v)),JSON.parse(localStorage.getItem("todos")).forEach((e=>{if(document.querySelectorAll(".tododiv"),""===e[1])var n=t(e[0],"No Due Date");else n=t(e[0],e[1]);c(n)}))}m.addEventListener("click",(function(d){u.replaceChildren(L),n(),function(){const e=document.querySelector(".addtask"),t=document.querySelector(".inputcontainer");e.addEventListener("click",(function(){t.classList.add("active")}))}(),document.querySelector(".remove").addEventListener("click",(function(){o()})),function(){const n=document.querySelector(".add"),d=document.querySelector(".chore"),a=document.querySelector(".date");n.addEventListener("click",(function(n){let s=[];s.push(d.value),s.push(a.value),v.push(s),console.log(v),console.log(localStorage.setItem("todos",JSON.stringify(v)));const r=document.querySelectorAll(".tododiv");if(""===a.value)var l=t(d.value,"No Due Date");else l=t(d.value,a.value);if(""===d.value)return void alert("Todo Name cannot be empty");let u=Array.from(r).some((e=>e.childNodes[0].childNodes[1].innerText===d.value));void 0===r||r.length<=0?c(l):void 0!==r&&r.length>0&&!0===u?alert("Todo cannot be the same"):c(l),e(),i(v),o(),n.stopImmediatePropagation()}))}()})),window.onload=function(){m.click(),setTimeout(h,1),setTimeout(e,3),setTimeout((function(){i(v)}),3)};const f=document.querySelector(".cancel"),E=document.querySelector(".addnewproject");function S(){document.querySelectorAll(".projectbtndiv").forEach((e=>{e.addEventListener("mouseover",(function(){e.childNodes[1].classList.add("active")})),e.addEventListener("mouseleave",(function(){e.childNodes[1].classList.remove("active")}))}))}function g(){document.querySelectorAll(".projectbutton").forEach((e=>{let n=0;const o=function(e){const t=document.createElement("div");t.classList.add("btncontainer");const n=document.createElement("h2");n.classList.add("btncurrentproject");const o=document.createElement("div");o.classList.add("btntaskdiv");const c=document.createElement("div");c.classList.add("btnbuttoncontainer");const d=document.createElement("img");d.src="images/plus.png";const a=document.createElement("button");a.innerHTML="Add Task",a.classList.add("btnaddtask");const s=document.createElement("div");s.classList.add("btninputcontainer");const r=document.createElement("input");r.classList.add("btnchore"),r.type="text",r.placeholder="What to do";const i=document.createElement("input");i.classList.add("btndate"),i.type="date";const l=document.createElement("div"),u=document.createElement("button");u.classList.add("btnadd"),u.classList.add(e.childNodes[0].childNodes[1].innerHTML),u.innerHTML="Add";const m=document.createElement("button");return m.innerHTML="Remove",m.classList.add("btnremove"),l.append(u),l.append(m),s.append(r),s.append(i),s.append(l),c.append(d),c.append(a),t.append(n),t.append(o),t.append(s),t.append(c),t}(e);console.log(e.childNodes[0].childNodes[1].innerHTML),window[e.childNodes[0].childNodes[1].innerHTML]=localStorage.getItem(`${e.childNodes[0].childNodes[1].innerHTML}todos`)?JSON.parse(localStorage.getItem(`${e.childNodes[0].childNodes[1].innerHTML}todos`)):[],console.log(window[e.childNodes[0].childNodes[1].innerHTML]),e.addEventListener("click",(function(c){n++,u.replaceChildren(o),function(e){document.querySelector("main").childNodes[0].childNodes[0].innerHTML=e.childNodes[0].childNodes[1].innerText}(this),function(){const e=document.querySelector(".btnaddtask"),t=document.querySelector(".btninputcontainer");e.addEventListener("click",(function(){t.classList.add("active")}))}(),document.querySelector(".btnremove").addEventListener("click",(function(){document.querySelector(".btninputcontainer").classList.remove("active")})),function(){const e=document.querySelector(".btnadd"),n=document.querySelector(".btnchore"),o=document.querySelector(".btndate");e.addEventListener("click",(function(e){const c=document.querySelector(".btnadd").classList,d=Array.from(c);console.log(d),console.log(d[1]);let a=[];a.push(n.value),a.push(o.value),window[d[1]].push(a),console.log(window[d[1]]),console.log(localStorage.setItem(`${d[1]}todos`,JSON.stringify(window[d[1]])));const i=document.querySelectorAll(".btntododiv");if(""===o.value)var u=t(n.value,"No Due Date");else u=t(n.value,o.value);if(""===n.value)return void alert("Todo Name cannot be empty");let m=Array.from(i).some((e=>e.childNodes[0].childNodes[1].innerText===n.value));void 0===i||i.length<=0?s(u):void 0!==i&&i.length>0&&!0===m?alert("Todo cannot be the same"):s(u),document.querySelector(".btninputcontainer").classList.remove("active"),r(),l(window[d[1]],d[1]),e.stopImmediatePropagation()}))}(),document.querySelectorAll(".removeprojectbtn").forEach((e=>{e.addEventListener("click",(function(e){e.target.parentNode.remove(),document.querySelector("main").replaceChildren()}))})),1===n&&function(e){localStorage.setItem(`${e.childNodes[0].childNodes[1].innerHTML}todos`,JSON.stringify(window[e.childNodes[0].childNodes[1].innerHTML])),JSON.parse(localStorage.getItem(`${e.childNodes[0].childNodes[1].innerHTML}todos`)).forEach((e=>{if(document.querySelectorAll(".btntododiv"),""===e[1])var n=t(e[0],"No Due Date");else n=t(e[0],e[1]);s(n)}))}(e),r(),l(window[e.childNodes[0].childNodes[1].innerHTML],e.childNodes[0].childNodes[1].innerHTML),c.stopImmediatePropagation()}))}))}document.querySelector(".makeaddvisible").addEventListener("click",(function(){document.querySelector(".project").classList.add("active")})),f.addEventListener("click",(function(){document.querySelector(".project").classList.remove("active")})),E.addEventListener("click",(function(){!function(){const e=document.querySelectorAll(".projectbutton"),t=document.querySelector(".projectnameinput");let n=Array.from(e).some((e=>e.childNodes[0].childNodes[1].innerText===t.value));void 0===e||e.length<=0?a():void 0!==e&&e.length>0&&!0===n?alert("project Name cannot be the same"):a(),p.push(t.value),console.log(localStorage.setItem("projects",JSON.stringify(p)))}(),S(),g(),d(p)})),localStorage.setItem("projects",JSON.stringify(p)),JSON.parse(localStorage.getItem("projects")).forEach((e=>{!function(e){const t=document.querySelector(".projectbuttoncontainer"),n=(document.querySelector(".projectnameinput"),document.createElement("div"));n.classList.add("projectbtndiv");const o=document.createElement("button"),c=document.createElement("div"),d=document.createElement("h3");d.innerHTML=e;const a=document.createElement("img");a.src="images/format-list-checks (1).png",c.append(a),c.append(d);const s=document.createElement("button");s.classList.add("removeprojectbtn"),s.innerHTML="x",o.append(c),o.classList.add("projectbutton"),o.classList.add(e),n.append(o),n.append(s),t.append(n),document.querySelector(".project").classList.remove("active")}(e),S(),d(p),g()})),document.querySelector(".today").addEventListener("click",(function(e){const t=document.createElement("h2");t.innerHTML=e.target.innerHTML,u.replaceChildren(t)})),document.querySelector(".week").addEventListener("click",(function(e){const t=document.createElement("h2");t.innerHTML="This "+e.target.innerHTML,u.replaceChildren(t)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,